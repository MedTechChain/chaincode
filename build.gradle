plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
}

group 'nl.medtechchain'
version '0.0.1'

dependencies {
    
    implementation 'org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:2.5.1'
    implementation 'org.json:json:+'
    implementation 'com.owlike:genson:1.6'
    testImplementation 'org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:2.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.jetbrains:annotations:24.1.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

application {
    mainClass = 'org.hyperledger.fabric.contract.ContractRouter'
}

checkstyle {
    toolVersion '10.14.0'
    configFile file("config/checkstyle/checkstyle.xml")
}

configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}


checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }

    finalizedBy jacocoTestReport
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

mainClassName = 'org.hyperledger.fabric.contract.ContractRouter'

shadowJar {
    archiveBaseName.set('medtechchain')
    archiveVersion.set('0.0.1')
    archiveClassifier.set(null)

    manifest {
        attributes 'Main-Class': 'org.hyperledger.fabric.contract.ContractRouter'
    }
}


check.dependsOn jacocoTestCoverageVerification
installDist.dependsOn check
